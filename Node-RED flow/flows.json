[
    {
        "id": "2d7c70cb.16397",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cc35e567.9b058",
        "type": "mqtt-broker",
        "z": "",
        "name": "CloudMQTT",
        "broker": "m24.cloudmqtt.com",
        "port": "17603",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "7a865b4.4065ea4",
        "type": "ui_tab",
        "z": "",
        "name": " ",
        "icon": "fa-area-chart",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d51f7104.b5f31",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "7a865b4.4065ea4",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d3885f0a.bdf2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1c054588.71a26a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d51f7104.b5f31",
        "order": 4,
        "width": "6",
        "height": "3"
    },
    {
        "id": "e22f9b53.01dce8",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "6f82df.a5e1b52",
        "type": "ui_group",
        "z": "",
        "name": "Inputs",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "567fc59d.6df2a4",
        "type": "ui_group",
        "z": "",
        "name": "Group 3",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "67b8c3fe.b9597c",
        "type": "ui_group",
        "z": "",
        "name": "Header",
        "tab": "7a865b4.4065ea4",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "19b090a0.9e91b7",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "e1b308f6.a5b7d8",
        "type": "ui_group",
        "z": "",
        "name": "Inputs",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "316e4316.505f1c",
        "type": "ui_group",
        "z": "",
        "name": "Group 3",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "85b4d927.0f19d",
        "type": "debug",
        "z": "2d7c70cb.16397",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "x": 865.5555725097656,
        "y": 596.6666889190674,
        "wires": []
    },
    {
        "id": "d126741b.54dc88",
        "type": "mqtt in",
        "z": "2d7c70cb.16397",
        "name": "temp_office",
        "topic": "temp_office",
        "qos": "1",
        "datatype": "auto",
        "broker": "cc35e567.9b058",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "8ab1f874.87689"
            ]
        ]
    },
    {
        "id": "66a0464e.7122c",
        "type": "mqtt in",
        "z": "2d7c70cb.16397",
        "name": "hum_office",
        "topic": "hum_office",
        "qos": "1",
        "datatype": "auto",
        "broker": "cc35e567.9b058",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "d20a3857.73338"
            ]
        ]
    },
    {
        "id": "8ab1f874.87689",
        "type": "ui_gauge",
        "z": "2d7c70cb.16397",
        "name": "temp_office",
        "group": "67b8c3fe.b9597c",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Temp",
        "label": "°C",
        "format": "{{value | number:1}}",
        "min": "-10",
        "max": "40",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "d20a3857.73338",
        "type": "ui_gauge",
        "z": "2d7c70cb.16397",
        "name": "hum_office",
        "group": "67b8c3fe.b9597c",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Hum",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#0000ff",
            "#0000ff"
        ],
        "seg1": "",
        "seg2": "",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "a6c00b8e.440318",
        "type": "ui_template",
        "z": "2d7c70cb.16397",
        "group": "d51f7104.b5f31",
        "name": "Weather icon",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<div style=\"font-size: 30px; height:100%; justify-content:center; align-items:center;\">\n<i class={{msg.payload}}></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 870,
        "y": 844,
        "wires": [
            []
        ]
    },
    {
        "id": "f5533338.5f528",
        "type": "ui_text",
        "z": "2d7c70cb.16397",
        "group": "d51f7104.b5f31",
        "order": 3,
        "width": "5",
        "height": "1",
        "name": "Forecast String",
        "label": " ",
        "format": "{{payload.location}} - {{payload.detail}} {{payload.tempc}}°C @ {{payload.humidity}}%",
        "layout": "col-center",
        "x": 860,
        "y": 904,
        "wires": []
    },
    {
        "id": "ea641cd.ab504e",
        "type": "template",
        "z": "2d7c70cb.16397",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "wi wi-owm-{{payload.icon}}",
        "output": "str",
        "x": 700,
        "y": 844,
        "wires": [
            [
                "a6c00b8e.440318"
            ]
        ]
    },
    {
        "id": "27028abc.3d0276",
        "type": "ui_chart",
        "z": "2d7c70cb.16397",
        "name": "Battery",
        "group": "67b8c3fe.b9597c",
        "order": 4,
        "width": "0",
        "height": "0",
        "label": "Battery",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": "52",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 860,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "53d440ba.0b458",
        "type": "mqtt in",
        "z": "2d7c70cb.16397",
        "name": "batt_office",
        "topic": "batt_office",
        "qos": "0",
        "datatype": "auto",
        "broker": "cc35e567.9b058",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "5258430c.f58e84",
                "ef568cf.4e5c87"
            ]
        ]
    },
    {
        "id": "24fddd40.81e50a",
        "type": "ui_text",
        "z": "2d7c70cb.16397",
        "group": "d51f7104.b5f31",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "Running for:",
        "label": "Running for:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 830,
        "y": 650,
        "wires": []
    },
    {
        "id": "402b8abd.a667d4",
        "type": "function",
        "z": "2d7c70cb.16397",
        "name": "Time Diff Calc",
        "func": "// Create a Date object from the payload and remove initial time\nglobal.set(\"time_now\", msg.payload);\nvar initDate = global.get(\"init_date\");\nvar timeDif  = (msg.payload - initDate) / 1000;\n\n//Truncate to int if divded by 1000 to show sec\ntimeDif = Math.floor(timeDif);\n\nvar seconds = parseInt((timeDif)%60);\nvar minutes = parseInt((timeDif/60)%60);\nvar hours   = parseInt((timeDif/(60*60))%24);\nvar days    = parseInt((timeDif/(60*60*24)));\n\n//Use 2 number for time\nhours   = (hours < 10) ? \"0\" + hours : hours;\nminutes = (minutes < 10) ? \"0\" + minutes : minutes;\nseconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n//Format output\nvar date_ret = (days < 1) ? date_ret = hours + \":\" + minutes + \":\" + seconds : date_ret = days + \"d \" + hours + \":\" + minutes;\n    \nmsg.payload = isNaN(seconds) ? \"not online yet\" : date_ret;\n\n// Check if initial time is set\nvar initValid = (initDate===undefined) ? { payload: true } : null;\n\nreturn [msg, initValid];",
        "outputs": 2,
        "noerr": 0,
        "x": 333,
        "y": 657.3999633789062,
        "wires": [
            [
                "24fddd40.81e50a"
            ],
            [
                "d8a8bdd6.90213"
            ]
        ]
    },
    {
        "id": "a5b443c.7e77cc",
        "type": "inject",
        "z": "2d7c70cb.16397",
        "name": "every sec",
        "topic": "timenow",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 121.39999389648438,
        "y": 656.5999755859375,
        "wires": [
            [
                "402b8abd.a667d4"
            ]
        ]
    },
    {
        "id": "2920a25f.c5a1de",
        "type": "ui_text",
        "z": "2d7c70cb.16397",
        "group": "d51f7104.b5f31",
        "order": 5,
        "width": "3",
        "height": "1",
        "name": "Last seen",
        "label": "Last seen:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 860,
        "y": 320,
        "wires": []
    },
    {
        "id": "f45dc394.af89b8",
        "type": "function",
        "z": "2d7c70cb.16397",
        "name": "Epoch to String",
        "func": "// Create a Date object from the payload\nvar ls   = global.get(\"last_seen\");\nvar date = new Date(ls+ 1000*60*60*2);\n\n// Adjust date format\ndate = date.toLocaleString('dk', { weekday: 'short', year: '2-digit', \n    month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', \n    second: '2-digit'});\n\n// Change the payload to be a formatted Date string\nmsg.payload = date.toString();\n\n// Return the message so it can be sent on\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 320,
        "wires": [
            [
                "2920a25f.c5a1de"
            ]
        ]
    },
    {
        "id": "8e5f4ecc.f44f6",
        "type": "ui_button",
        "z": "2d7c70cb.16397",
        "name": "Clean Graph",
        "group": "67b8c3fe.b9597c",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "delete",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "2a84ccda.f867c4",
                "86988fcf.bd7a"
            ]
        ]
    },
    {
        "id": "52bc3e10.595a28",
        "type": "ui_template",
        "z": "2d7c70cb.16397",
        "group": "67b8c3fe.b9597c",
        "name": "MoreE Logo",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<img src=\"https://moreelectronics.dk/wp-content/uploads/2018/07/ME-logo-top.png\" style=\"width:145px;height:100%;\">",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 106.88885498046875,
        "y": 873.6666259765625,
        "wires": [
            []
        ]
    },
    {
        "id": "30b3f32d.0bfb24",
        "type": "cloudant out",
        "z": "2d7c70cb.16397",
        "name": "Batt store",
        "cloudant": "",
        "database": "battery",
        "service": "MoreElectronics-cloudantNoSQLDB",
        "payonly": false,
        "operation": "insert",
        "x": 509.2777862548828,
        "y": 152.68888568878174,
        "wires": []
    },
    {
        "id": "70e3ba20.4ad88c",
        "type": "cloudant in",
        "z": "2d7c70cb.16397",
        "name": "Get from Database",
        "cloudant": "",
        "database": "battery",
        "service": "MoreElectronics-cloudantNoSQLDB",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "3f1c3f98.c35a7"
            ]
        ]
    },
    {
        "id": "1348f1f6.bcb1ce",
        "type": "ui_template",
        "z": "2d7c70cb.16397",
        "group": "d51f7104.b5f31",
        "name": "WebCam Pic",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<!-- or use the image preview instead > -->\n<img src=\"https://images.webcams.travel/preview/1511514946.jpg\" style=\"height:100%;\">\n\n<!-- <a name=\"lkr-timelapse-player\" data-id=\"1511514946\" data-play=\"day\" href=\"https://lookr.com/1511514946\" target=\"_blank\">Copenhagen: Radisson Blu Scandinavia Hotel</a><script async type=\"text/javascript\" src=\"https://api.lookr.com/embed/script/player.js\"></script> -->",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 870,
        "y": 784,
        "wires": [
            []
        ]
    },
    {
        "id": "5258430c.f58e84",
        "type": "change",
        "z": "2d7c70cb.16397",
        "name": "Add Timestamp",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "_msgid",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "qos",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "retain",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 329.2777862548828,
        "y": 152.68888568878174,
        "wires": [
            [
                "30b3f32d.0bfb24"
            ]
        ]
    },
    {
        "id": "c9c45259.dd0b8",
        "type": "link in",
        "z": "2d7c70cb.16397",
        "name": "clean_in",
        "links": [
            "2a84ccda.f867c4"
        ],
        "x": 655.5555419921875,
        "y": 150,
        "wires": [
            [
                "27028abc.3d0276"
            ]
        ]
    },
    {
        "id": "2a84ccda.f867c4",
        "type": "link out",
        "z": "2d7c70cb.16397",
        "name": "clean_out",
        "links": [
            "c9c45259.dd0b8"
        ],
        "x": 223.88888931274414,
        "y": 526.6666622161865,
        "wires": []
    },
    {
        "id": "ef568cf.4e5c87",
        "type": "trigger",
        "z": "2d7c70cb.16397",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "json",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "70e3ba20.4ad88c"
            ]
        ]
    },
    {
        "id": "3f1c3f98.c35a7",
        "type": "function",
        "z": "2d7c70cb.16397",
        "name": "Sort Cloudant and format data",
        "func": "// Sort cloudant data by epoch time ascending\nmsg.payload.sort((a, b) => (a.time > b.time) ? 1 : -1)\n\n// Format data as chart.js\nvar chart = [{\n    \"series\":   [\"Battery\"],\n    \"data\":     [[{ }]],\n    \"labels\":   [\"\"]\n}];\n\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    chart[0].data[0][i] = {\n        x: msg.payload[i].time,\n        y: msg.payload[i].payload\n    };\n}\n\n// Set the last seen time from the database.\nglobal.set(\"last_seen\", msg.payload[msg.payload.length-1].time);\n\n// Catch initial online time\nvar timeNow  = global.get(\"time_now\");\nvar initDate = global.get(\"init_date\");\nvar newTime  = null;\nif( timeNow - msg.payload[msg.payload.length-1].time > 60*60*1000)\n{\n    node.warn(\"Offiline for too long\");\n    global.set(\"init_date\", undefined);\n}\nelse if ( initDate===undefined )\n{\n    var resetTime = msg.payload[msg.payload.length-1].time;\n    node.warn(\"Reset initial time to now\");\n    global.set(\"init_date\", resetTime);\n    newTime = { payload : resetTime };\n}\n\n// Return formated data as the msg.payload\nmsg.payload = chart;\n\nreturn [msg, newTime];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "27028abc.3d0276",
                "f45dc394.af89b8"
            ],
            [
                "96ee4015.46884",
                "85b4d927.0f19d"
            ]
        ]
    },
    {
        "id": "5af099b3.4f92c8",
        "type": "inject",
        "z": "2d7c70cb.16397",
        "name": "\"watchdog\"",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 105.55554962158203,
        "y": 280.0000162124634,
        "wires": [
            [
                "ef568cf.4e5c87"
            ]
        ]
    },
    {
        "id": "4c5e695e.608ec",
        "type": "cloudant in",
        "z": "2d7c70cb.16397",
        "name": "Get from Database",
        "cloudant": "",
        "database": "battery",
        "service": "MoreElectronics-cloudantNoSQLDB",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 519.9999389648438,
        "y": 438.88888454437256,
        "wires": [
            [
                "2a1890ba.6e2978"
            ]
        ]
    },
    {
        "id": "86988fcf.bd7a",
        "type": "trigger",
        "z": "2d7c70cb.16397",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "100",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 296.6666488647461,
        "y": 438.8888874053955,
        "wires": [
            [
                "4c5e695e.608ec"
            ]
        ]
    },
    {
        "id": "7607b814.da3e78",
        "type": "catch",
        "z": "2d7c70cb.16397",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2719ddfa.c53f7a",
        "type": "e-mail",
        "z": "2d7c70cb.16397",
        "server": "smtp.gmail.com",
        "port": "587",
        "secure": true,
        "tls": true,
        "name": "l.bispo@live.com",
        "dname": "",
        "x": 270,
        "y": 380,
        "wires": []
    },
    {
        "id": "2dc72f97.1996e",
        "type": "openweathermap in",
        "z": "2d7c70cb.16397",
        "name": "CPH Forecast",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Copenhagen",
        "country": "Denmark",
        "language": "en",
        "x": 110,
        "y": 783,
        "wires": [
            [
                "f5533338.5f528",
                "ea641cd.ab504e",
                "1348f1f6.bcb1ce"
            ]
        ]
    },
    {
        "id": "2a1890ba.6e2978",
        "type": "function",
        "z": "2d7c70cb.16397",
        "name": "bulk delete function",
        "func": "var count = msg.payload.length;\nvar list = [];\nfor (i=0;i<count;i++) {\nlist.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev,\n        _deleted: true\n    });\n}\n\nif (i === 0) {\nmsg.payload = \"No documents were found.  The database is empty!\";\nreturn [null, msg];\n}\n\nmsg.payload = {\n                \"docs\": \n                list\n               }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 505.5555419921875,
        "wires": [
            [
                "559cc883.8d70f"
            ]
        ]
    },
    {
        "id": "559cc883.8d70f",
        "type": "http request",
        "z": "2d7c70cb.16397",
        "name": "delete inputs on database",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://9b7d06ee-eaf1-4273-ae98-c22461dbf1c9-bluemix.cloudantnosqldb.appdomain.cloud/battery/_bulk_docs",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 797.333309173584,
        "y": 505.22223472595215,
        "wires": [
            []
        ]
    },
    {
        "id": "d8a8bdd6.90213",
        "type": "cloudant in",
        "z": "2d7c70cb.16397",
        "name": "Get from Database",
        "cloudant": "",
        "database": "initial_time",
        "service": "MoreElectronics-cloudantNoSQLDB",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 300,
        "y": 721,
        "wires": [
            [
                "21a1a942.9861f6"
            ]
        ]
    },
    {
        "id": "21a1a942.9861f6",
        "type": "function",
        "z": "2d7c70cb.16397",
        "name": "Clean or Set DB",
        "func": "var timenow = global.get(\"time_now\");\nvar length  = msg.payload.length\nvar clean   = ( length<1 ) ? false : true;\nvar list    = [];\n\nif( clean === true)\n{\n    node.warn(\"Clean DB\");\n    \n    global.set(\"init_date\", msg.payload[length-1].payload);\n    msg.payload.sort((a, b) => (a.time > b.time) ? 1 : -1)\n    //scan _rev and _id\n    for(var i=0; i<length-1; i++)\n    {\n        list[i]={\n            _id: msg.payload[i]._id,\n            _rev: msg.payload[i]._rev\n        };\n    }\n    msg.payload = list;\n    return [msg, null];\n}\nelse\n{\n    /*node.warn(\"set new timenow due empty DB\");\n    global.set(\"init_date\", timenow);\n    msg.payload = timenow;\n    return [null, msg];*/\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 512,
        "y": 721,
        "wires": [
            [
                "62e11bb0.d7c23c"
            ],
            []
        ]
    },
    {
        "id": "96ee4015.46884",
        "type": "cloudant out",
        "z": "2d7c70cb.16397",
        "name": "Set",
        "cloudant": "",
        "database": "initial_time",
        "service": "MoreElectronics-cloudantNoSQLDB",
        "payonly": false,
        "operation": "insert",
        "x": 633,
        "y": 358,
        "wires": []
    },
    {
        "id": "3c24d288.1b5a5e",
        "type": "cloudant out",
        "z": "2d7c70cb.16397",
        "name": "Clean",
        "cloudant": "",
        "database": "initial_time",
        "service": "MoreElectronics-cloudantNoSQLDB",
        "payonly": false,
        "operation": "delete",
        "x": 810,
        "y": 690,
        "wires": []
    },
    {
        "id": "62e11bb0.d7c23c",
        "type": "split",
        "z": "2d7c70cb.16397",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 678,
        "y": 690,
        "wires": [
            [
                "3c24d288.1b5a5e"
            ]
        ]
    }
]